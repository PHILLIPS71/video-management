name: main

on:
  push:
    branches: [main, next]
  pull_request:

jobs:
  build-infrastructure:
    name: 🏗️ Build Infrastructure
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: restore packages
        run: dotnet restore
        working-directory: ./src/Infrastructure

      - name: build
        run: dotnet build -c Release --no-restore
        working-directory: ./src/Infrastructure

  build-dashboard-service:
    name: 🏗️ Build Service.Dashboard
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: restore packages
        run: dotnet restore
        working-directory: ./src/Service.Dashboard

      - name: build
        run: dotnet build -c Release --no-restore
        working-directory: ./src/Service.Dashboard

  build-encoder-service:
    name: 🏗️ Build Service.Encoder
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: restore packages
        run: dotnet restore
        working-directory: ./src/Service.Encoder

      - name: build
        run: dotnet build -c Release --no-restore
        working-directory: ./src/Service.Encoder

  test-infrastructure:
    name: 🧪 Test Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: restore packages
        run: dotnet restore
        working-directory: ./src/Infrastructure

      - name: build
        run: dotnet build -c Release --no-restore
        working-directory: ./src/Infrastructure

      - name: test
        run: dotnet test --no-build --verbosity normal
        working-directory: ./src/Infrastructure

  test-dashboard-service:
    name: 🧪 Test Service.Dashboard
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: restore packages
        run: dotnet restore
        working-directory: ./src/Service.Dashboard

      - name: build
        run: dotnet build -c Release --no-restore
        working-directory: ./src/Service.Dashboard

      - name: test
        run: dotnet test --no-build --verbosity normal
        working-directory: ./src/Service.Dashboard

  test-encoder-service:
    name: 🧪 Test Service.Encoder
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: restore packages
        run: dotnet restore
        working-directory: ./src/Service.Encoder

      - name: build
        run: dotnet build -c Release --no-restore
        working-directory: ./src/Service.Encoder

      - name: test
        run: dotnet test --no-build --verbosity normal
        working-directory: ./src/Service.Encoder

  build-web-application:
    name: 🏗️ Build Web Application
    runs-on: ubuntu-latest
    needs:
      [
        build-infrastructure,
        test-infrastructure,

        build-dashboard-service,
        test-dashboard-service,

        build-encoder-service,
        test-encoder-service,
      ]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: install
        run: pnpm install

      - name: build
        run: pnpm run build

  typescript:
    name: 🦺 Type Check Web Application
    runs-on: ubuntu-latest
    needs: build-web-application
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: install
        run: pnpm install

      - name: type check
        run: pnpm run typecheck

  lint:
    name: 🚨 Lint
    runs-on: ubuntu-latest
    needs: build-web-application
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: install
        run: pnpm install

      - name: type check
        run: pnpm run lint

  test:
    name: 🧪 Test Web Application
    runs-on: ubuntu-latest
    needs: build-web-application
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: install
        run: pnpm install

      - name: test
        run: pnpm run test
