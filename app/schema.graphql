"""
The node interface is implemented by entities that have a global unique identifier.
"""
interface Node {
  id: ID!
}

union FileSystemEntry = FileSystemDirectory | FileSystemFile

type PathInfo {
  name: String!
  full_name: String!
  extension: String
  directory_path: String
}

type Library implements Node {
  id: ID!
  name: String!
  slug: String!
  drive_status: DriveStatus!
  path_info: PathInfo!
  entries(where: FileSystemEntryFilterInput, order: [FileSystemEntrySortInput!]): [FileSystemEntry!]!
}

type FileSystemFile implements Node {
  id: ID!
  size: Long!
  path_info: PathInfo!
}

type FileSystemDirectory implements Node {
  id: ID!
  path_info: PathInfo!
}

type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  library(where: LibraryFilterInput, order: [LibrarySortInput!]): Library
  libraries(
    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: LibraryFilterInput
    order: [LibrarySortInput!]
  ): LibrariesConnection
  file_system_entries(
    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: FileSystemFileFilterInput
    order: [FileSystemFileSortInput!]
  ): File_system_entriesConnection
}

type Mutation {
  library_create(name: String!, slug: String!, path: String!): Library
}

input FileSystemEntryFilterInput {
  and: [FileSystemEntryFilterInput!]
  or: [FileSystemEntryFilterInput!]
  path_info: PathInfoFilterInput
  parent_directory: FileSystemDirectoryFilterInput
  id: UuidOperationFilterInput
}

input FileSystemEntrySortInput {
  path_info: PathInfoSortInput
  parent_directory: FileSystemDirectorySortInput
  id: SortEnumType
}

input PathInfoFilterInput {
  and: [PathInfoFilterInput!]
  or: [PathInfoFilterInput!]
  name: StringOperationFilterInput
  full_name: StringOperationFilterInput
  extension: StringOperationFilterInput
  directory_path: StringOperationFilterInput
}

input FileSystemDirectoryFilterInput {
  and: [FileSystemDirectoryFilterInput!]
  or: [FileSystemDirectoryFilterInput!]
  path_info: PathInfoFilterInput
  parent_directory: FileSystemDirectoryFilterInput
  id: UuidOperationFilterInput
}

input UuidOperationFilterInput {
  eq: UUID
  neq: UUID
  in: [UUID]
  nin: [UUID]
  gt: UUID
  ngt: UUID
  gte: UUID
  ngte: UUID
  lt: UUID
  nlt: UUID
  lte: UUID
  nlte: UUID
}

input PathInfoSortInput {
  name: SortEnumType
  full_name: SortEnumType
  extension: SortEnumType
  directory_path: SortEnumType
}

input FileSystemDirectorySortInput {
  path_info: PathInfoSortInput
  parent_directory: FileSystemDirectorySortInput
  id: SortEnumType
}

enum SortEnumType {
  ASC
  DESC
}

input StringOperationFilterInput {
  and: [StringOperationFilterInput!]
  or: [StringOperationFilterInput!]
  eq: String
  neq: String
  contains: String
  ncontains: String
  in: [String]
  nin: [String]
  startsWith: String
  nstartsWith: String
  endsWith: String
  nendsWith: String
}

scalar UUID

enum DriveStatus {
  ONLINE
  DEGRADED
  OFFLINE
}

"""
The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

input LibraryFilterInput {
  and: [LibraryFilterInput!]
  or: [LibraryFilterInput!]
  name: StringOperationFilterInput
  slug: StringOperationFilterInput
  path_info: PathInfoFilterInput
  drive_status: DriveStatusOperationFilterInput
  entries: ListFilterInputTypeOfFileSystemEntryFilterInput
  concurrency_token: ListByteOperationFilterInput
  id: UuidOperationFilterInput
}

input LibrarySortInput {
  name: SortEnumType
  slug: SortEnumType
  path_info: PathInfoSortInput
  drive_status: SortEnumType
  id: SortEnumType
}

"""
A connection to a list of items.
"""
type LibrariesConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [LibrariesEdge!]

  """
  A flattened list of the nodes.
  """
  nodes: [Library!]
}

input FileSystemFileFilterInput {
  and: [FileSystemFileFilterInput!]
  or: [FileSystemFileFilterInput!]
  size: LongOperationFilterInput
  path_info: PathInfoFilterInput
  parent_directory: FileSystemDirectoryFilterInput
  id: UuidOperationFilterInput
}

input FileSystemFileSortInput {
  size: SortEnumType
  path_info: PathInfoSortInput
  parent_directory: FileSystemDirectorySortInput
  id: SortEnumType
}

"""
A connection to a list of items.
"""
type File_system_entriesConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [File_system_entriesEdge!]

  """
  A flattened list of the nodes.
  """
  nodes: [FileSystemFile!]
}

input DriveStatusOperationFilterInput {
  eq: DriveStatus
  neq: DriveStatus
  in: [DriveStatus!]
  nin: [DriveStatus!]
}

input ListFilterInputTypeOfFileSystemEntryFilterInput {
  all: FileSystemEntryFilterInput
  none: FileSystemEntryFilterInput
  some: FileSystemEntryFilterInput
  any: Boolean
}

input ListByteOperationFilterInput {
  all: ByteOperationFilterInput
  none: ByteOperationFilterInput
  some: ByteOperationFilterInput
  any: Boolean
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  Indicates whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Indicates whether more edges exist prior the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

"""
An edge in a connection.
"""
type LibrariesEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Library!
}

input LongOperationFilterInput {
  eq: Long
  neq: Long
  in: [Long]
  nin: [Long]
  gt: Long
  ngt: Long
  gte: Long
  ngte: Long
  lt: Long
  nlt: Long
  lte: Long
  nlte: Long
}

"""
An edge in a connection.
"""
type File_system_entriesEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: FileSystemFile!
}

input ByteOperationFilterInput {
  eq: Byte
  neq: Byte
  in: [Byte]
  nin: [Byte]
  gt: Byte
  ngt: Byte
  gte: Byte
  ngte: Byte
  lt: Byte
  nlt: Byte
  lte: Byte
  nlte: Byte
}

"""
The `Byte` scalar type represents non-fractional whole numeric values. Byte can represent values between 0 and 255.
"""
scalar Byte
